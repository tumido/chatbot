name: Release to Github

on:
  issues:
    types: [opened]

jobs:
  check-release:
    name: Check if it's an issue release
    runs-on: ubuntu-latest
    outputs:
      commentId: ${{ steps.comment.outputs.comment-id }}
    steps:
      - name: Check if user has write access
        uses: lannonbr/repo-permission-check-action@2.0.2
        continue-on-error: true
        id: access
        with:
          permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check issue label
        if: ${{ !contains(github.event.issue.labels.*.name, 'release') }}
        continue-on-error: true
        id: releaseLabel
        run: exit 1

      - name: Close Issue
        uses: peter-evans/close-issue@v3
        if: ${{ !steps.access.outcome == 'failure' && steps.releaseLabel.outcome == 'success' }}
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚õî You're not a maintainer @${{ github.event.issue.user.id }}. You can't trigger a release.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Exit on failure
        if: ${{ steps.access.outcome == 'failure' || steps.releaseLabel.outcome == 'failure' }}
        run: exit 1

      - name: Create success comment
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ success() }}
        id: comment
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            üöÄ Release issue noticed. Build triggered from ${{ github.sha }}. Job started [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test
    needs: check-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run test
        run: npm test

      - name: Create success comment
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ success() }}
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ needs.check-release.outputs.commentId }}
          body: |
            üîç Tests passed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: check-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup and Build
        uses: redhat-actions/s2i-build@v2
        with:
          path_context: "."
          builder_image: "registry.access.redhat.com/ubi8/nodejs-18"
          image: slack-first
          tags: test

      - name: Create success comment
        uses: peter-evans/create-or-update-comment@v3
        if: ${{ success() }}
        id: comment
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ needs.check-release.outputs.commentId }}
          body: |
            üèóÔ∏è Container is buildable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: [check-release, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ needs.check-release.outputs.commentId }}
          body: |
            üì¶ Releasing to Github

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Release via semantic-release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger "Release" workflow if new release was created
        uses: peter-evans/repository-dispatch@v2
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          event-type: trigger-release
          client-payload: '{"github": ${{ toJson(github) }},"commentId": "${{ needs.check-release.outputs.commentId }}", "releaseVersion": "${{ steps.semantic.outputs.new_release_version }}" }'

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        if: steps.semantic.outputs.new_release_published != 'true'
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-id: ${{ needs.check-release.outputs.commentId }}
          body: |
            ‚õî Semantic release determined that no release is needed. Closing.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Close Issue
        uses: peter-evans/close-issue@v3
        if: steps.semantic.outputs.new_release_published != 'true'
        with:
          issue-number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
